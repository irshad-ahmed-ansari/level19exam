"use strict";
(globalThis["webpackJsonp_yves_default"] = globalThis["webpackJsonp_yves_default"] || []).push([["quantity-counter"],{

/***/ "./src/Pyz/Yves/ShopUi/Theme/default/components/molecules/quantity-counter/quantity-counter.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/Pyz/Yves/ShopUi/Theme/default/components/molecules/quantity-counter/quantity-counter.ts ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ QuantityCounter)
/* harmony export */ });
/* harmony import */ var ShopUi_models_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ShopUi/models/component */ "./vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/models/component.ts");

class QuantityCounter extends ShopUi_models_component__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor() {
    super(...arguments);
    this.incrementButton = void 0;
    this.decrementButton = void 0;
    this.input = void 0;
    this.value = void 0;
    this.duration = 1000;
    this.timeout = 0;
    this.numberOfDecimalPlaces = 10;
    this.formattedNumberInput = void 0;
  }
  readyCallback() {}
  init() {
    this.incrementButton = this.getElementsByClassName(this.jsName + "__button-increment")[0];
    this.decrementButton = this.getElementsByClassName(this.jsName + "__button-decrement")[0];
    this.input = this.getElementsByClassName(this.jsName + "__input")[0];
    this.formattedNumberInput = this.getElementsByClassName(this.jsName + "__formatted-input")[0];
    this.value = this.getValue;
    this.mapEvents();
  }
  mapEvents() {
    var _this$input;
    this.decrementButton.addEventListener('click', event => this.onChangeQuantity(event, 'decrease'));
    this.incrementButton.addEventListener('click', event => this.onChangeQuantity(event, 'increase'));
    (_this$input = this.input) == null ? void 0 : _this$input.addEventListener('keydown', event => this.onKeyDown(event));
    if (this.autoUpdate) {
      this.input.addEventListener('change', () => this.delayToSubmit());
    }
  }
  onChangeQuantity(event, type) {
    event.preventDefault();
    if (!this.isAvailable) {
      return;
    }
    var value = this.formattedNumberInput.unformattedValue;
    var step = this.step * this.precision;
    var calculatedValue = type === 'increase' ? value * this.precision + step : value * this.precision - step;
    var potentialValue = Number((calculatedValue / this.precision).toFixed(this.numberOfDecimalPlaces));
    var shouldUpdate = value < this.maxQuantity || potentialValue >= this.minQuantity;
    if (!shouldUpdate) {
      return;
    }
    this.input.value = potentialValue.toString();
    if (this.isAjaxMode) {
      this.delayToSubmit(true);
      return;
    }
    this.input.dispatchEvent(new Event('change'));
    this.input.dispatchEvent(new Event('input'));
  }
  delayToSubmit(triggerInput) {
    if (triggerInput === void 0) {
      triggerInput = false;
    }
    clearTimeout(this.timeout);
    this.timeout = window.setTimeout(() => {
      if (this.value === this.getValue) {
        return;
      }
      if (this.isAjaxMode && triggerInput) {
        this.input.dispatchEvent(new Event('input', {
          bubbles: true
        }));
        this.input.dispatchEvent(new Event('change', {
          bubbles: true
        }));
        return;
      }
      if (!this.isAjaxMode) {
        this.input.form.submit();
      }
    }, this.duration);
  }
  onKeyDown(event) {
    if (event.key === 'Enter') {
      event.preventDefault();
    }
  }
  get minQuantity() {
    return Number(this.input.getAttribute('min'));
  }
  get maxQuantity() {
    var max = Number(this.input.getAttribute('max'));
    return max > 0 && max > this.minQuantity ? max : Infinity;
  }
  get step() {
    var step = Number(this.input.getAttribute('step'));
    return step > 0 ? step : 1;
  }
  get getValue() {
    return Number(this.input.value);
  }
  get autoUpdate() {
    return this.input.hasAttribute('data-auto-update');
  }
  get isAvailable() {
    return !this.input.disabled && !this.input.readOnly;
  }
  get precision() {
    return Number("1" + '0'.repeat(this.numberOfDecimalPlaces));
  }
  get isAjaxMode() {
    return !!this.input.getAttribute('data-ajax-mode');
  }
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,