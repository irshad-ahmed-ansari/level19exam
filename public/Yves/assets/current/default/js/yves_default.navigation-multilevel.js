"use strict";
(globalThis["webpackJsonp_yves_default"] = globalThis["webpackJsonp_yves_default"] || []).push([["navigation-multilevel"],{

/***/ "./src/Pyz/Yves/ShopUi/Theme/default/components/molecules/navigation-multilevel/navigation-multilevel.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/Pyz/Yves/ShopUi/Theme/default/components/molecules/navigation-multilevel/navigation-multilevel.ts ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NavigationMultilevel)
/* harmony export */ });
/* harmony import */ var ShopUi_models_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ShopUi/models/component */ "./vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/models/component.ts");
/* harmony import */ var ShopUi_components_molecules_main_overlay_main_overlay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ShopUi/components/molecules/main-overlay/main-overlay */ "./vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/components/molecules/main-overlay/main-overlay.ts");


class NavigationMultilevel extends ShopUi_models_component__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor() {
    super(...arguments);
    this.overlay = void 0;
    this.triggers = void 0;
    this.touchTriggers = void 0;
    this.eventShowOverlay = void 0;
    this.eventHideOverlay = void 0;
  }
  readyCallback() {}
  init() {
    this.overlay = document.getElementsByClassName(this.overlayBlockClassName)[0];
    this.triggers = Array.from(this.getElementsByClassName(this.jsName + "__trigger"));
    this.touchTriggers = Array.from(this.getElementsByClassName(this.jsName + "__touch-trigger"));
    this.mapEvents();
    this.addReverseClassToDropDownMenu();
  }
  mapEvents() {
    this.triggers.forEach(trigger => {
      trigger.addEventListener('mouseover', event => this.onTriggerOver(event));
    });
    this.triggers.forEach(trigger => {
      trigger.addEventListener('mouseout', event => this.onTriggerOut(event));
    });
    this.touchTriggers.forEach(trigger => {
      trigger.addEventListener('click', event => this.onTriggerClick(event));
    });
    this.mapOverlayEvents();
  }
  addReverseClassToDropDownMenu() {
    this.triggers.forEach(trigger => {
      var dropItem = trigger.getElementsByClassName(this.jsName + "__wrapper")[0];
      if (!dropItem) {
        return;
      }
      if (this.isDropMenuReverse(trigger, dropItem)) {
        dropItem.classList.add(this.reverseClassName);
      }
    });
  }
  onTriggerOver(event) {
    if (this.isWidthMoreThanAvailableBreakpoint()) {
      var trigger = event.currentTarget;
      event.preventDefault();
      this.toggleOverlay(true);
      trigger.classList.add(this.classToToggle);
    }
  }
  onTriggerOut(event) {
    if (this.isWidthMoreThanAvailableBreakpoint()) {
      var trigger = event.currentTarget;
      event.preventDefault();
      this.toggleOverlay(false);
      trigger.classList.remove(this.classToToggle);
    }
  }
  onTriggerClick(event) {
    if (!this.isWidthMoreThanAvailableBreakpoint()) {
      var trigger = event.currentTarget;
      var contentToShowSelector = this.getDataAttribute(trigger, 'data-toggle-target');
      var contentToggleClass = this.getDataAttribute(trigger, 'data-class-to-toggle');
      var closestParentNode = trigger.closest("." + this.jsName + "__item");
      var contentToShow = closestParentNode.querySelector(contentToShowSelector);
      contentToShow.classList.toggle(contentToggleClass);
      trigger.classList.toggle('is-active');
    }
  }
  mapOverlayEvents() {
    var overlayConfig = {
      bubbles: true,
      detail: {
        id: this.name,
        zIndex: Number(getComputedStyle(this).zIndex) - 1
      }
    };
    this.eventShowOverlay = new CustomEvent(ShopUi_components_molecules_main_overlay_main_overlay__WEBPACK_IMPORTED_MODULE_1__.EVENT_SHOW_OVERLAY, overlayConfig);
    this.eventHideOverlay = new CustomEvent(ShopUi_components_molecules_main_overlay_main_overlay__WEBPACK_IMPORTED_MODULE_1__.EVENT_HIDE_OVERLAY, overlayConfig);
  }
  toggleOverlay(isShown) {
    this.dispatchEvent(isShown ? this.eventShowOverlay : this.eventHideOverlay);
  }
  isDropMenuReverse(trigger, dropItem) {
    var leftPositionToTheMenuItem = trigger.offsetLeft;
    var windowWidth = window.innerWidth;
    var dropItemWidth = dropItem ? dropItem.offsetWidth : 0;
    return windowWidth - leftPositionToTheMenuItem < dropItemWidth;
  }
  isWidthMoreThanAvailableBreakpoint() {
    return window.innerWidth >= this.availableBreakpoint;
  }
  getDataAttribute(block, attr) {
    return block.getAttribute(attr);
  }
  get classToToggle() {
    return this.getAttribute('class-to-toggle');
  }
  get availableBreakpoint() {
    return Number(this.getAttribute('available-breakpoint'));
  }
  get overlayBlockClassName() {
    return this.getAttribute('overlay-block-class-name');
  }
  get reverseClassName() {
    return this.getAttribute('reverse-class-name');
  }
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,